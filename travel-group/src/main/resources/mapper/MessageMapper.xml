<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fuchen.travel.mapper.MessageMapper">

	<!--新增消息-->
	<insert id="insertMessage" keyProperty="id" parameterType="Message">
		insert into message (from_id, to_id, conversation_id, content, status, create_time)
		values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
	</insert>

	<!--修改消息的状态-->
	<update id="updateStatus">
		update message set status = #{status}
		where id in
		<foreach collection="ids" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<!--查询当前用户的会话列表，针对每个会话只返回最新的私信-->
	<select id="selectConversations" resultType="com.fuchen.travel.entity.Message" >
		select id, from_id, to_id, conversation_id, content, status, create_time
		from message
		where id in (
			select max(id)
			from message
			where status != 2 and from_id != 1 and (from_id = #{userId} or to_id = #{userId})
			group by conversation_id
		)
		order by id desc limit #{offset}, #{limit}
	</select>
	
	<!--查询用户的会话数量-->
	<select id="selectConversationCount" resultType="java.lang.Integer">
		select count(m.maxid)
		from (
			select max(id) as maxid
	        from message
	        where status != 2 and from_id != 1 and (from_id = #{userId} or to_id = #{userId})
	        group by conversation_id
	    )
		as m
	</select>

	<!--查询某个会话所包含的私信列表-->
	<select id="selectLetters" resultType="com.fuchen.travel.entity.Message">
		select id, from_id, to_id, conversation_id, content, status, create_time
		from message
		where status != 2 and from_id != 1 and conversation_id = #{conversationId}
		order by id desc limit #{offset}, #{limit}
	</select>

	<!--查询某个会话所包含的私信数量-->
	<select id="selectLetterCount" resultType="java.lang.Integer">
		select count(id)
		from message
		where status != 2 and from_id != 1 and conversation_id = #{conversationId}
	</select>

	<!--查询用户私信未读数量-->
	<select id="selectLetterUnreadCount" resultType="java.lang.Integer">
		select count(id)
		from message
		where status = 0 and from_id != 1 and to_id = #{userId}
		<if test="conversationId!=null">
			and conversation_id = #{conversationId}
		</if>
	</select>

	<!--查询某个主题下的最新通知-->
	<select id="selectLatestNotice" resultType="com.fuchen.travel.entity.Message">
		select id, from_id, to_id, conversation_id, content, status, create_time
		from message
		where id in (
		    select max(id) from message
			where status != 2 and from_id = 1 and to_id = #{userId} and conversation_id = #{topic}
			)
	</select>

	<!--查询某个主题所包含的通知数量-->
	<select id="selectNoticeCount" resultType="java.lang.Integer">
		select count(id)
		from message
		where status != 2
		and from_id =1
		and to_id = #{userId}
		and conversation_id = #{topic}
	</select>

	<!--查询未读消息数量-->
	<select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
		select count(id)
		from message
		where status = 0
		and from_id =1
		and to_id = #{userId}
		<if test="topic!=null">
			and conversation_id = #{topic}
		</if>
	</select>

	<!--查询某个主题中包含的通知列表-->
	<select id="selectNotices" resultType="com.fuchen.travel.entity.Message">
		select id, from_id, to_id, conversation_id, content, status, create_time
		from message
		where status != 2
		and from_id = 1
		and to_id = #{userId}
		and conversation_id = #{topic}
		order by create_time desc
		limit #{offset}, #{limit}
	</select>
</mapper>